name: "Unit Tests"
on:
  pull_request: {}
  push:
      branches: ["main"]

env:
  PYTHON_VERSION: "3.10"

jobs:
  test:
    name: Pytest
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Versions available: https://raw.githubusercontent.com/actions/python-versions/main/versions-manifest.json
        python-version: [ "3.6.7", "3.7.1", "3.8.0", "3.9.0", "3.10.0" ]
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        uses: ./.github/actions/install-dependencies
        with:
          requirements: "true"
          test-requirements: "true"

      - name: Run pytest
        run: pytest --cov deploy tests/test_insert_rows.py --cov-report xml:coverage-${{ matrix.python-version }}.xml --junitxml=test-results-${{ matrix.python-version }}.xml

      - name: Upload pytest test results artifact
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results-${{ matrix.python-version }}
          path: test-results-${{ matrix.python-version }}.xml
          retention-days: 3
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      - name: Upload coverage results artifact
        uses: actions/upload-artifact@v4
        with:
          name: pytest-coverage-${{ matrix.python-version }}
          path: coverage-${{ matrix.python-version }}.xml
          retention-days: 3
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}